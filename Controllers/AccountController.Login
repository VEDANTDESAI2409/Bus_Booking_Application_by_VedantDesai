[HttpPost]
[ValidateAntiForgeryToken]
public async Task<IActionResult> Login(string email, string password)
{
    var user = await _db.Users
        .FirstOrDefaultAsync(u => u.Email == email && u.Password == password);

    if (user == null)
    {
        ModelState.AddModelError("", "Invalid credentials");
        return View();
    }

    // âœ… Store session data
    HttpContext.Session.SetInt32("UserId", user.Id);
    HttpContext.Session.SetString("UserName", user.UserName);
    HttpContext.Session.SetString("IsAdmin", user.IsAdmin ? "1" : "0");

    // ðŸš« Prevent redirection to old MyBookings page
    TempData.Remove("ReturnUrl");

    // âœ… Redirect based on role
    if (user.IsAdmin)
    {
        return RedirectToAction("Dashboard", "Admin");
    }
    else
    {
        // ðŸ‘‡ Always redirect normal user to Trip page after login
        return RedirectToAction("List", "Bus");
    }
}
